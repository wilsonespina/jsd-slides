{"id":"eR6x","dependencies":[{"name":"./../../../favicon-32x32.png","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/favicon-32x32.png","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-04/index.html"},{"name":"./../../../favicon-16x16.png","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/favicon-16x16.png","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-04/index.html"},{"name":"./../../scss/main.scss","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/scss/main.scss","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-04/index.html"},{"name":"./../../assets/images/ga/ga-logo.png","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/assets/images/ga/ga-logo.png","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-04/index.html"},{"name":"./../../assets/images/general/learning-objective.jpg","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/assets/images/general/learning-objective.jpg","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-04/index.html"},{"name":"./../../assets/images/week-2/control-flow.png","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/assets/images/week-2/control-flow.png","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-04/index.html"},{"name":"./../../assets/images/general/code_along.png","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/assets/images/general/code_along.png","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-04/index.html"},{"name":"./../../assets/images/general/exercise.png","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/assets/images/general/exercise.png","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-04/index.html"},{"name":"./../../assets/images/week-2/functions-modular.png","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/assets/images/week-2/functions-modular.png","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-04/index.html"},{"name":"./../../assets/images/week-2/functions-reusable.png","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/assets/images/week-2/functions-reusable.png","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-04/index.html"},{"name":"./../../assets/images/week-2/functions-efficient.png","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/assets/images/week-2/functions-efficient.png","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-04/index.html"},{"name":"./../../assets/images/week-2/homework-fork.png","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/assets/images/week-2/homework-fork.png","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-04/index.html"},{"name":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/package.json","includedInParent":true,"mtime":1587821841722}],"generated":{"html":"<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>JSD | Lesson 04</title><link rel=\"icon\" type=\"image/png\" href=\"https://pages.git.generalassemb.ly/wilson-espina/jsd-slides/14e882d3bf96f36922a4faba43b30f10.png\" sizes=\"32x32\"><link rel=\"icon\" type=\"image/png\" href=\"https://pages.git.generalassemb.ly/wilson-espina/jsd-slides/7181b75b553f3a5273f64c28442c5440.png\" sizes=\"16x16\"><link href=\"https://fonts.googleapis.com/css?family=Merriweather:400,400i,700\" rel=\"stylesheet\"><link rel=\"stylesheet\" href=\"https://pages.git.generalassemb.ly/wilson-espina/jsd-slides/0f7bc6b0448cbca0959b2e11d9ee62f6.css\"></head><body> <div class=\"reveal\"> <div class=\"slides\"> <section class=\"slide\" data-background-color=\"black\"> <header class=\"slide__header-intro\"> <img class=\"slide__header-intro--logo height-100-p\" src=\"https://pages.git.generalassemb.ly/wilson-espina/jsd-slides/672f17cf708d8465adf1b62be5581a45.png\" alt=\"General Assembly logo\"> <h2 class=\"slide__header-intro--title\">General Assembly</h2> </header> <div class=\"slide__content\"> <h1 class=\"slide__title--white\">Conditionals & Functions</h1> <h3 class=\"slide__name white\">Wilson Espina</h3> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Review</h2> </header> <div class=\"slide__content\"> <h1 class=\"slide__title--black\">What did we do last lesson?</h1> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content\"> <div class=\"slide__container-flex start\"> <img class=\"slide__image slide__image--learning-objective margin-right-1 height-100-p width-5\" src=\"https://pages.git.generalassemb.ly/wilson-espina/jsd-slides/b38918804c880b12f1a5d1ad37f53354.jpg\" alt=\"Learning Objective\"> <h2 class=\"slide__title\">Learning Objectives</h2> </div> <p class=\"slide__text\">At the end of this class, you will be able to:</p> <ul class=\"slide__list\"> <li class=\"slide__list-item\">Differentiate between <code>true</code>, <code>false</code>, 'truth-y', and 'false-y'</li> <li class=\"slide__list-item\">Use <code>if/else</code> conditionals to control program flow based on boolean conditions</li> <li class=\"slide__list-item\">Use comparison operators to evaluate and compare statements</li> <li class=\"slide__list-item\">Describe how parameters and arguments relate to functions</li> <li class=\"slide__list-item\">Create and call a function that accepts parameters to solve a problem</li> <li class=\"slide__list-item\">Return a value from a function using the <em>return</em> keyword </li>  </ul> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">Agenda</h2> <ul class=\"slide__list\"> <li class=\"slide__list-item\">Conditionals</li> <li class=\"slide__list-item\">Logical operators </li> <li class=\"slide__list-item\">Truthy & Falsy</li> <li class=\"slide__list-item\">Functions</li> </ul> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">Exit Ticket Suggestions</h2> <div class=\"slide__container\"> <ol class=\"slide__list margin-top-1 padding-left-2\"> <li class=\"slide__list-item\">Code exercises were HARD, requiring a lot more understanding of concepts than is provided during explanation.</li> <li class=\"slide__list-item\">The pre-course Codecademy tutorials + all the EloquentJS reading homework = information overload.</li> <li class=\"slide__list-item\">The lesson was quite tough, lots of new concepts being introduced.</li> </ol> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">Classroom Resources</h2> <div class=\"slide__container\"> <ol class=\"slide__list margin-top-1 padding-left-2\"> <li class=\"slide__list-item\">Pull changes from the <code>wilson-espina/jsd-9-resources</code> repo to your computer:</li> <ul class=\"slide__list\"> <li class=\"slide__list-item\">Open the Terminal</li> <li class=\"slide__list-item\"><code>cd</code> to the <code>Documents/JSD/jsd-9-resources</code> directory</li> <li class=\"slide__list-item\">Type <code class=\"bold\">git pull origin master</code> and press <code class=\"bold\">return</code></li> </ul> <li class=\"slide__list-item\">In your editor, open the following folder:\t<code>Documents/JSD/jsd-9-resources/04-conditionals-functions</code></li> </ol> </div> </div> </section> <section class=\"slide\" data-background-color=\"black\"> <header class=\"slide__header-intro\"> <h2 class=\"slide__header-intro--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content\"> <h1 class=\"slide__title--white\">Conditionals</h1> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">Conditional Statements</h2> <div class=\"slide__container-flex\"> <ul class=\"slide__list\"> <li class=\"slide__list-item\">Conditional statements are a way of essentially skipping over a block of code if it does not pass a boolean expression.</li> <li class=\"slide__list-item\">Known as <em>control flow statements</em>, because they let the program make decisions about which statement should be executed next, rather than just going in order.</li> </ul> <img class=\"slide__image slide__image--control-flow height-100-p width-20\" src=\"https://pages.git.generalassemb.ly/wilson-espina/jsd-slides/fb791fa7c3cc55808e9e8a62651be62b.png\" alt=\"Control flow diagram\"> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">Philosophical JavaScript</h2> <div class=\"slide__container\"> <div class=\"slide__container-center\"> <img class=\"slide__image slide__image--control-flow height-100-p width-20\" src=\"https://media.giphy.com/media/l3nWhI38IWDofyDrW/giphy.gif\" alt=\"Pensive statue\" crossorigin=\"\"> <p class=\"slide__text margin-top-3\">JavaScript always tries to look for truth</p> </div> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">Block Statements</h2> <ul class=\"slide__list\"> <li class=\"slide__list-item\">Statements meant to be executed after a control flow operation will be grouped into what is called a <em>block statement</em>.</li> <li class=\"slide__list-item\">These statements are wrapped into a pair of curly braces:</li> </ul> <pre class=\"slide__pre width-100-p height-100-p margin-top-2\"><code class=\"hljs slide__code slide__code--middle javascript small\" data-trim=\"\">\n{\n  console.log(\"hello\");\n  console.log(\"good bye\");\n}\n\t\t\t\t\t</code></pre> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">If Statement</h2> <i class=\"slide__icon\">✅</i> <pre class=\"slide__pre width-100-p height-100-p margin-bottom-2\"><code class=\"hljs slide__code slide__code--middle javascript small\" data-trim=\"\">\nif (expression) {\n  code\n}\n\t\t\t\t\t</code></pre> <i class=\"slide__icon\">❌</i> <pre class=\"slide__pre width-100-p height-100-p margin-bottom-2\"><code class=\"hljs slide__code slide__code--middle javascript small\" data-trim=\"\">\nif (expression) { code }\n\n\t\t\t\t\t</code></pre> <ul class=\"slide__list fragment\"> <li class=\"slide__list-item\">Both versions will still be be interpreted as valid JavaScript.</li> <li class=\"slide__list-item\">The correct version is best practice for code readability.</li> </ul> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">Comparison Operators</h2> <div class=\"slide__container-flex\"> <table class=\"slide__table\"> <tbody class=\"slide__body slide__body--comparison-operators\"> <tr> <td class=\"col-25-p\"> <code class=\"slide__code small bold\">></code> </td> <td class=\"col-75-p\"> <p class=\"slide__text slide__text--table\">greater than</p> </td> </tr> <tr> <td class=\"col-25-p\"> <code class=\"slide__code small bold\">>=</code> </td> <td class=\"col-75-p\"> <p class=\"slide__text slide__text--table\">greater than or equal to</p> </td> </tr> <tr> <td class=\"col-25-p\"> <code class=\"slide__code small bold\"><</code> </td> <td class=\"col-75-p\"> <p class=\"slide__text slide__text--table\">less than</p> </td> </tr> <tr> <td class=\"col-25-p\"> <code class=\"slide__code small bold\">===</code> </td> <td class=\"col-75-p\"> <p class=\"slide__text slide__text--table\">strict equal, type and value</p> </td> </tr> <tr> <td class=\"col-25-p\"> <code class=\"slide__code small bold\">==</code> </td> <td class=\"col-75-p\"> <p class=\"slide__text slide__text--table\">coercive equal (AVOID)</p> </td> </tr> <tr> <td class=\"col-25-p\"> <code class=\"slide__code small bold\">!==</code> </td> <td class=\"col-75-p\"> <p class=\"slide__text slide__text--table\">strict not equal, type and value</p> </td> </tr> <tr> <td class=\"col-25-p\"> <code class=\"slide__code small bold\">!=</code> </td> <td class=\"col-75-p\"> <p class=\"slide__text slide__text--table\">coercive not equal (AVOID)</p> </td> </tr> </tbody> </table> <div class=\"slide__container margin-left-2 fragment\"> <pre class=\"slide__pre width-40\"><code class=\"hljs slide__code slide__code--middle javascript small\" data-trim=\"\">\n-1 > 2\n//=> false\n\n123 < 6;\n//=> false\n\n0.12 >= 0.0023;\n//=> true\n\t\t\t\t\t\t\t</code></pre> <ul class=\"slide__list margin-top-1\"> <li class=\"slide__list-item--small\">Always returns a <em>Boolean</em> value</li> </ul> </div> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">Type coercion</h2> <div class=\"slide__container-flex\"> <pre class=\"slide__pre width-100-p\"><code class=\"hljs slide__code slide__code--middle javascript small\" data-trim=\"\">\n12 > '12';\n//=> false\n\n12 >= '12';\n//=> true\n\n'A' > 'a'\n//=> false\n\n'b' > 'a';\n//=> true\n\n'Glow' > 'Glee';\n//=> true\n\t\t\t\t\t\t</code></pre> <ul class=\"slide__list margin-left-2 fragment\"> <li class=\"slide__list-item slide__list-item--medium\">JavaScript assumes you mean something else when data types don't match with non-strict comparison.</li> <li class=\"slide__list-item slide__list-item--medium\">This can be the source of frustration for some developers, since most languages do not implicitly convert strings to numbers.</li> <li class=\"slide__list-item slide__list-item--medium\">JavaScript uses the so-called <em>dictionary</em> or <em>lexicographical</em> order.</li> </ul> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content height-100-p\"> <h2 class=\"slide__title\">If statement</h2> <div class=\"slide__container-flex height-100-p\"> <pre class=\"slide__pre width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript medium height-100-p\" data-trim=\"\">\nlet weather = \"sunny\";\n\nif (weather === \"sunny\") {\n  console.log(\"Grab your sunglasses\");\n}\n\t\t\t\t\t\t</code></pre> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content height-100-p\"> <h2 class=\"slide__title\">If / else statement</h2> <div class=\"slide__container-flex height-100-p\"> <pre class=\"slide__pre width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript medium height-100-p\" data-trim=\"\">\nlet weather = \"sunny\";\n\nif (weather === \"sunny\") {\n  console.log(\"Grab your sunglasses\");\n} else {\n  console.log(\"Grab a coat\");\n}\n\t\t\t\t\t\t</code></pre> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content height-100-p\"> <h2 class=\"slide__title\">Else if Statement</h2> <div class=\"slide__container-flex height-100-p\"> <pre class=\"slide__pre width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript medium height-100-p\" data-trim=\"\">\nlet weather = \"sunny\";\n\nif (weather === \"sunny\") {\n  console.log(\"Grab your sunglasses\");\n} else if (weather === \"rainy\") {\n  console.log(\"Take an umbrella\");\n} else {\n  console.log(\"Grab a coat\");\n}\n\t\t\t\t\t\t</code></pre> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content height-100-p\"> <h2 class=\"slide__title\">Ternary Operator</h2> <ul class=\"slide__list margin-left-2\"> <li class=\"slide__list-item slide__list-item--medium\">You can think about the ternary operator as a concise \"if-else in one line\"</li> </ul> <div class=\"slide__container-flex height-100-p\"> <pre class=\"slide__pre margin-top-1 width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript medium height-100-p\" data-trim=\"\">\n(expression) ? trueCode : falseCode;\n\t\t\t\t\t\t</code></pre> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content height-100-p\"> <h2 class=\"slide__title\">Ternary Operator</h2> <ul class=\"slide__list margin-left-2\"> <li class=\"slide__list-item slide__list-item--medium\">Can produce one of two values, which can be assigned to a variable in the same statement</li> </ul> <div class=\"slide__container-flex height-100-p\"> <pre class=\"slide__pre margin-top-1 width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript medium height-100-p\" data-trim=\"\">\nlet drink = (expression) ? trueCode : falseCode;\n\nlet sunny = true;\nlet drink = sunny ? 'beer' : 'coffee';\nconsole.log(drink) // beer\n\t\t\t\t\t\t</code></pre> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content height-100-p\"> <h2 class=\"slide__title\">Switch Statement</h2> <ul class=\"slide__list margin-left-2\"> <li class=\"slide__list-item slide__list-item--medium\">The switch statement can be used for multiple branches based on a number or string:</li> </ul> <div class=\"slide__container-flex height-100-p\"> <pre class=\"slide__pre margin-top-1 width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript small height-100-p\" data-trim=\"\">\nconst food = 'apple';\n\nswitch(food) {\n\tcase 'pear':\n\t  console.log('I like pears');\n\t  break;\n\tcase 'apple':\n\t  console.log('I like apples');\n\t  break;\n\tdefault:\n\t  console.log('No favourite');\n}\n//=> I like apples\n\t\t\t\t\t\t</code></pre> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content height-100-p\"> <h2 class=\"slide__title\">Logical Operators</h2> <ul class=\"slide__list margin-left-2\"> <li class=\"slide__list-item slide__list-item--medium\">Operators that let you chain conditional expressions</li> </ul> <table class=\"slide__table margin-top-1\"> <tbody class=\"slide__body slide__body--logical-operators\"> <tr> <td class=\"col-15-p\"> <code class=\"slide__code small bold\">&&</code> </td> <td class=\"col-15-p\"> <code class=\"slide__code small bold\">AND</code> </td> <td class=\"col-75-p\"> <p class=\"slide__text slide__text--table\">Returns <code>true</code> when both left and right values are true</p> </td> </tr> <tr> <td class=\"col-15-p\"> <code class=\"slide__code small bold\">||</code> </td> <td class=\"col-15-p\"> <code class=\"slide__code small bold\">OR</code> </td> <td class=\"col-75-p\"> <p class=\"slide__text slide__text--table\">Returns <code>true</code> when at least one of the left or right values is <code>true</code></p> </td> </tr> <tr> <td class=\"col-15-p\"> <code class=\"slide__code small bold\">!</code> </td> <td class=\"col-15-p\"> <code class=\"slide__code small bold\">NOT</code> </td> <td class=\"col-75-p\"> <p class=\"slide__text slide__text--table\">Takes a single value and returns the opposite Boolean value</p> </td> </tr> </tbody> </table> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">&& (AND)</h2> <div class=\"slide__container\"> <ul class=\"slide__list margin-left-2\"> <li class=\"slide__list-item slide__list-item--medium\">The <code>&&</code> operator requires both left and right values to be true in order to return <em>true</em>:</li> </ul> <div class=\"slide__container-flex\"> <pre class=\"slide__pre width-100-p\"><code class=\"hljs slide__code slide__code--middle javascript medium height-100-p\" data-trim=\"\">\ntrue && true\n//=> true\n\t\t\t\t\t\t\t</code></pre> </div> </div> <div class=\"slide__container margin-top-1 fragment\"> <ul class=\"slide__list margin-left-2\"> <li class=\"slide__list-item slide__list-item--medium\">Any other combination is <em>false</em></li> </ul> <div class=\"slide__container-flex\"> <pre class=\"slide__pre width-100-p\"><code class=\"hljs slide__code slide__code--middle javascript medium height-100-p\" data-trim=\"\">\ntrue && false\n//=> false\n\nfalse && false\n//=> false\n\t\t\t\t\t\t\t</code></pre> </div> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">|| (OR)</h2> <div class=\"slide__container\"> <ul class=\"slide__list margin-left-2\"> <li class=\"slide__list-item slide__list-item--medium\">The <code>||</code> operator requires just one of the left or right values to be true in order to return <em>true</em></li> </ul> <div class=\"slide__container-flex\"> <pre class=\"slide__pre width-100-p\"><code class=\"hljs slide__code slide__code--middle javascript medium height-100-p\" data-trim=\"\">\ntrue || false\n//=> true\n\nfalse || true\n//=> true\n\nfalse || false\n//=> false\n\t\t\t\t\t\t\t</code></pre> </div> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">Strict Mode</h2> <div class=\"slide__container\"> <div class=\"slide__container\"> <pre class=\"slide__pre width-100-p\"><code class=\"hljs slide__code slide__code--middle javascript large height-100-p\" data-trim=\"\">\n\t\t\t\t\t\t\t\t'use strict';\n\t\t\t\t\t\t\t</code></pre> <ul class=\"slide__list margin-top-2\"> <li class=\"slide__list-item slide__list-item--medium\">Goes at the top of the file.</li> <li class=\"slide__list-item slide__list-item--medium\">Tells browsers to be unforgiving in interpreting our code</li> <li class=\"slide__list-item slide__list-item--medium\">Helps us write good code by ensuring that even little mistakes trigger errors.</li> </ul> </div> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Code along</h2> </header> <div class=\"slide__content\"> <div class=\"slide__container-center\"> <img class=\"slide__image slide__image--code-along width-20\" src=\"https://pages.git.generalassemb.ly/wilson-espina/jsd-slides/e1063b42328bdf7719525876934111e5.png\" alt=\"Code Along\"> </div> <div class=\"slide__container-center\"> <p class=\"slide__text--medium\">Open up: <code>1-conditionals-codealong</code></p> </div> </div> </section> <section class=\"slide\" data-background-color=\"black\"> <header class=\"slide__header-intro\"> <h2 class=\"slide__header-intro--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content\"> <h1 class=\"slide__title--white\">Truthy & Falsy</h1> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content height-100-p\"> <h2 class=\"slide__title\">Falsy Values</h2> <p class=\"slide__text\">All of the following become false when converted to a Boolean:</p> <pre class=\"slide__pre margin-top-2 width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript small\" data-trim=\"\">\nfalse\n0\n'' // (empty string)\nNaN\nnull\nundefined\n\t\t\t\t\t</code></pre> <ul class=\"slide__list margin-left-2\"> <li class=\"slide__list-item slide__list-item--medium\">These are known as <code class=\"color-light-blue\">falsy</code> values because they are equivalent to <code>false</code></li> </ul> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content height-100-p\"> <h2 class=\"slide__title\">Truthy Values</h2> <ul class=\"slide__list margin-left-2\"> <li class=\"slide__list-item slide__list-item--medium\">All values other than <code>false, 0,\t\"\", NaN, null</code>, and <code>undefined</code> become\ttrue when converted to a Boolean.</li> <li class=\"slide__list-item slide__list-item--medium\">All values besides these six are known as <code class=\"color-light-blue\">truthy</code> values because they are equivalent to <code>true</code>.</li> </ul> <pre class=\"slide__pre margin-top-2 width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript small\" data-trim=\"\">\n17193\ntrue\n'0'\n'false'\n\t\t\t\t\t</code></pre> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content height-100-p\"> <h2 class=\"slide__title\">Converting to Boolean</h2> <ul class=\"slide__list margin-left-2\"> <li class=\"slide__list-item slide__list-item--small\">Adding <em>!</em> before a value returns the <strong>inverse</strong> of the value as a Boolean</li> <li class=\"slide__list-item slide__list-item--small\">Adding <em>!!</em> before a value gives you the <strong>original</strong> value as a Boolean:</li> </ul> <pre class=\"slide__pre margin-top-1 width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript xsmall\" data-trim=\"\">\n!!1\n//=> true\n\n!!0\n//=> false\n\n!![]\n//=> true\n\n!!{}\n//=> true\n\n!!null\n//=> false\n\n!!\"\"\n//=> false\n\t\t\t\t\t</code></pre> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Lab - Ages exercise</h2> </header> <div class=\"slide__content\"> <div class=\"slide__container-flex\"> <img class=\"slide__image slide__image--exercise width-10\" src=\"https://pages.git.generalassemb.ly/wilson-espina/jsd-slides/8faa6e9d60b96972f2f360256eb7bca9.png\" alt=\"Exercise\"> <div class=\"slide__exercise\"> <p class=\"slide__exercise__header\">Type of Exercise</p> <ul class=\"slide__exercise__header__list\"> <li class=\"slide__exercise__header__list--item\">Pairs</li> </ul> <p class=\"slide__exercise__header\">Location</p> <ul class=\"slide__exercise__header__list\"> <li class=\"slide__exercise__header__list--item color-dark-blue\">starter-code > 2-ages-lab</li> </ul> <p class=\"slide__exercise__header\">Timing</p> <table class=\"slide__table\"> <tbody> <tr> <td class=\"slide-timing\"> <h2 class=\"slide-timing__header\">15 mins</h2> </td> <td> <ol class=\"slide__exercise__header__list\"> <li class=\"slide__exercise__header__list--item\">Write a program that outputs results based on users’ age. Use the list of conditions in the app.js file.</li> <li class=\"slide__exercise__header__list--item\">BONUS 1: Rewrite your code to allow a user to enter the exponent value, rather than hard-coding it into your program. (Hint: Read up on the window.prompt method).</li> <li class=\"slide__exercise__header__list--item\">BONUS 2: Rewrite your code to use a switch statement rather than if and else statements).</li> </ol> </td> </tr> </tbody> </table> </div> </div> </div> </section> <section class=\"slide\" data-background-color=\"black\"> <header class=\"slide__header-intro\"> <h2 class=\"slide__header-intro--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content\"> <h1 class=\"slide__title--white\">Functions</h1> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">Developers should be lazy</h2> <div class=\"slide__content\"> <div class=\"slide__container-flex start\"> <img class=\"slide__image slide__image--lazy-dog width-30\" src=\"https://media.giphy.com/media/FdWU4HtO5vTGw/giphy.gif\" alt=\"Lazy dog\" crossorigin=\"\"> <div class=\"margin-left-2 fragment\"> <p class=\"slide__text\">Code should be written with <a href=\"https://en.wikipedia.org/wiki/Don%27t_repeat_yourself\" target=\"_blank\">DRY</a> principals:</p> <ul class=\"slide__list margin-left-2\"> <li class=\"slide__list-item slide__list-item--medium\"><em>D</em>on't</li> <li class=\"slide__list-item slide__list-item--medium\"><em>R</em>epeat</li> <li class=\"slide__list-item slide__list-item--medium\"><em>Y</em>ourself</li> </ul> </div> </div> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">Functions</h2> <div class=\"slide__content\"> <div class=\"slide__container-flex space-between\"> <div class=\"flex-basis-third text-align-center\"> <img class=\"slide__image slide__image--functions-modular width-15\" src=\"https://pages.git.generalassemb.ly/wilson-espina/jsd-slides/7f18963beff5bd3b125bbe2abb0edfe9.png\" alt=\"Modular\"> <p class=\"slide__text slide__text--small\">Allow us to group a series of statements together to perform a specific task</p> </div> <div class=\"flex-basis-third text-align-center\"> <img class=\"slide__image slide__image--functions-reusable width-15\" src=\"https://pages.git.generalassemb.ly/wilson-espina/jsd-slides/815f3f350ad0484b9ffcd2536097cca3.png\" alt=\"Reusable\"> <p class=\"slide__text slide__text--small\">We can use the same function multiple times</p> </div> <div class=\"flex-basis-third text-align-center\"> <img class=\"slide__image slide__image--functions-efficient width-15\" src=\"https://pages.git.generalassemb.ly/wilson-espina/jsd-slides/ca6eb91fe116a4733eb6728382c509e8.png\" alt=\"Efficient\"> <p class=\"slide__text slide__text--small\">Not always executed when a page loads. Provide us with a way to 'store' the steps needed to achieve a task</p> </div> </div> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content height-100-p\"> <h2 class=\"slide__title\">Function Declaration Syntax</h2> <div class=\"slide__container-flex height-100-p\"> <pre class=\"slide__pre margin-top-1 width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript large height-100-p\" data-trim=\"\">\nfunction name(parameters) {\n  // do something\n}\n\t\t\t\t\t\t</code></pre> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content height-100-p\"> <h2 class=\"slide__title\">Function Declaration example</h2> <div class=\"slide__container-flex height-100-p\"> <pre class=\"slide__pre margin-top-1 width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript large height-100-p\" data-trim=\"\">\nfunction sayHello() {\n  console.log(“Hello!”);\n}\n\t\t\t\t\t\t</code></pre> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content height-100-p\"> <h2 class=\"slide__title\">Function Expression syntax</h2> <div class=\"slide__container-flex height-100-p\"> <pre class=\"slide__pre margin-top-1 width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript large height-100-p\" data-trim=\"\">\nlet name = function(parameters) {\n  // do something\n}\n\t\t\t\t\t\t</code></pre> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content height-100-p\"> <h2 class=\"slide__title\">Function Expression example</h2> <div class=\"slide__container-flex height-100-p\"> <pre class=\"slide__pre margin-top-1 width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript large height-100-p\" data-trim=\"\">\nlet sayHello = function(parameters) {\n  console.log(\"Hello!\");\n}\n\t\t\t\t\t\t</code></pre> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content height-100-p\"> <h2 class=\"slide__title\">Arrow Function syntax</h2> <div class=\"slide__container-flex height-100-p\"> <pre class=\"slide__pre margin-top-1 width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript large height-100-p\" data-trim=\"\">\nlet name = (parameters) => {\n  // do something\n}\n\t\t\t\t\t\t</code></pre> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content height-100-p\"> <h2 class=\"slide__title\">Arrow Function syntax</h2> <div class=\"slide__container-flex height-100-p\"> <pre class=\"slide__pre margin-top-1 width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript large height-100-p\" data-trim=\"\">\nlet sayHello = (parameters) => {\n  console.log(\"Hello!\");\n}\n\t\t\t\t\t\t</code></pre> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">Invoking a Function</h2> <div class=\"slide__content\"> <div class=\"slide__container\"> <ul class=\"slide__list\"> <li class=\"slide__list-item slide__list-item--medium\">When we want to execute the function (make it run), we use the function name followed by parentheses <em>( )</em></li> <li class=\"slide__list-item slide__list-item--medium\">We can say:</li> <li class=\"slide__list-item slide__list-item--medium no-arrow\"> <div class=\"slide__container-flex\"> <ul class=\"slide__list\"> <li class=\"slide__list-item slide__list-item--medium bullet margin-left-5\">Call the function</li> <li class=\"slide__list-item slide__list-item--medium bullet margin-left-5\">Invoke the function</li> <li class=\"slide__list-item slide__list-item--medium bullet margin-left-5\">Execute the function</li> </ul> <pre class=\"slide__pre width-50-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript small height-100-p\" data-trim=\"\">\nfunction sayGoodbye(){\n  console.log('good bye');\n}\n\nsayGoodbye();\n=> good bye\n\t\t\t\t\t\t\t\t\t\t</code></pre> </div> </li> </ul> </div> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Code along</h2> </header> <div class=\"slide__content\"> <div class=\"slide__container-center\"> <img class=\"slide__image slide__image--code-along width-20\" src=\"https://pages.git.generalassemb.ly/wilson-espina/jsd-slides/e1063b42328bdf7719525876934111e5.png\" alt=\"Code Along\"> </div> <div class=\"slide__container-center\"> <p class=\"slide__text--medium\">Open up: <code>3-functions-codealong</code></p> </div>  </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Lab - Using Functions</h2> </header> <div class=\"slide__content\"> <div class=\"slide__container-flex\"> <img class=\"slide__image slide__image--exercise width-10\" src=\"https://pages.git.generalassemb.ly/wilson-espina/jsd-slides/8faa6e9d60b96972f2f360256eb7bca9.png\" alt=\"Exercise\"> <div class=\"slide__exercise\"> <p class=\"slide__exercise__header\">Key Objective</p> <ul class=\"slide__exercise__header__list\"> <li class=\"slide__exercise__header__list--item\">Practice defining and executing functions</li> </ul> <p class=\"slide__exercise__header\">Type of Exercise</p> <ul class=\"slide__exercise__header__list\"> <li class=\"slide__exercise__header__list--item\">Individual</li> </ul> <p class=\"slide__exercise__header\">Location</p> <ul class=\"slide__exercise__header__list\"> <li class=\"slide__exercise__header__list--item color-dark-blue\">starter-code > 4-functions-exercise (part 1)</li> </ul> <p class=\"slide__exercise__header\">Timing</p> <table class=\"slide__table\"> <tbody> <tr> <td class=\"slide-timing\"> <h2 class=\"slide-timing__header\">4 mins</h2> </td> <td> <ol class=\"slide__exercise__header__list\"> <li class=\"slide__exercise__header__list--item\">Open up <code>js > main.js</code></li> <li class=\"slide__exercise__header__list--item\">Follow the instructions under Part 1.</li> </ol> </td> </tr> </tbody> </table> </div> </div> </div> </section> <section class=\"slide\" data-background-color=\"black\"> <header class=\"slide__header-intro\"> <h2 class=\"slide__header-intro--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content\"> <h1 class=\"slide__title--white\">Parameters</h1> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">Parameters make functions reusable</h2> <div class=\"slide__content\"> <pre class=\"slide__pre width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript small height-100-p\" data-trim=\"\">\nfunction newFunc(parameter1, parameter2, parameter3){\n\tconsole.log(parameter1 + parameter2 + parameter3);\n}\n\t\t\t\t\t\t</code></pre> <p class=\"slide__text\">The values in the parentheses are placeholders for the data that we pass to our functions and are known as <em>parameters</em>:</p> <ul class=\"slide__list margin-left-2\"> <li class=\"slide__list-item slide__list-item--medium\">Parameters are variables listed as a part of the function definition.</li> <li class=\"slide__list-item slide__list-item--medium\">When we invoke a function, the values we pass to the function are called <em>arguments</em>.</li> </ul> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content height-100-p\"> <h2 class=\"slide__title\">Using Parameters</h2> <div class=\"slide__container height-100-p\"> <pre class=\"slide__pre margin-top-1 width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript medium height-100-p\" data-trim=\"\">\nfunction sayHello(name) {\n  console.log('Hello! ' + name);\n}\n\nsayHello('Wilson'); // 'Wilson' is an argument\n=> 'Hello Wilson'\n\t\t\t\t\t\t</code></pre> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content height-100-p\"> <h2 class=\"slide__title\">Using Multiple Parameters</h2> <div class=\"slide__container height-100-p\"> <pre class=\"slide__pre margin-top-1 width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript medium height-100-p\" data-trim=\"\">\nfunction sum(num1, num2) {\n  console.log(num1 + num2);\n}\n\nsum(1, 2); // 1 and 2 are arguments\n=> 3\n\t\t\t\t\t\t</code></pre> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content height-100-p\"> <h2 class=\"slide__title\">Default Parameters</h2> <div class=\"slide__container height-100-p\"> <pre class=\"slide__pre margin-top-1 width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript medium height-100-p\" data-trim=\"\">\nfunction multiply(num1, num2 = 2) {\n  console.log(num1 * num2);\n}\n\nmultiply(4,5);\n=> 20\n\nmultiply(3);\n=> 6 // (argument) * 2 (default value)\n\t\t\t\t\t\t</code></pre> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Lab - Reading Functions</h2> </header> <div class=\"slide__content\"> <div class=\"slide__container-flex\"> <img class=\"slide__image slide__image--exercise width-10\" src=\"https://pages.git.generalassemb.ly/wilson-espina/jsd-slides/8faa6e9d60b96972f2f360256eb7bca9.png\" alt=\"Exercise\"> <div class=\"slide__exercise\"> <p class=\"slide__exercise__header\">Type of Exercise</p> <ul class=\"slide__exercise__header__list\"> <li class=\"slide__exercise__header__list--item\">Individual</li> </ul> <p class=\"slide__exercise__header\">Location</p> <ul class=\"slide__exercise__header__list\"> <li class=\"slide__exercise__header__list--item color-dark-blue\">starter-code > 4-functions-exercise (part 2)</li> <li class=\"slide__exercise__header__list--item\">Add you answer to the Slack polls</li> </ul> <p class=\"slide__exercise__header\">Timing</p> <table class=\"slide__table\"> <tbody> <tr> <td class=\"slide-timing\"> <h2 class=\"slide-timing__header\">3 mins</h2> </td> <td> <ol class=\"slide__exercise__header__list\"> <li class=\"slide__exercise__header__list--item\">Look at Part 2A and 2B. Predict what will happen when each function is called.</li> </ol> </td> </tr> </tbody> </table> </div> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Lab - Creating Functions</h2> </header> <div class=\"slide__content\"> <div class=\"slide__container-flex\"> <img class=\"slide__image slide__image--exercise width-10\" src=\"https://pages.git.generalassemb.ly/wilson-espina/jsd-slides/8faa6e9d60b96972f2f360256eb7bca9.png\" alt=\"Exercise\"> <div class=\"slide__exercise\"> <p class=\"slide__exercise__header\">Type of Exercise</p> <ul class=\"slide__exercise__header__list\"> <li class=\"slide__exercise__header__list--item\">Individual / Pairs</li> </ul> <p class=\"slide__exercise__header\">Location</p> <ul class=\"slide__exercise__header__list\"> <li class=\"slide__exercise__header__list--item color-dark-blue\">starter-code > 4-functions-exercise (part 3)</li> </ul> <p class=\"slide__exercise__header\">Timing</p> <table class=\"slide__table\"> <tbody> <tr> <td class=\"slide-timing\"> <h2 class=\"slide-timing__header\">8 mins</h2> </td> <td> <ol class=\"slide__exercise__header__list\"> <li class=\"slide__exercise__header__list--item\">See if you can write one function that takes some parameters and combines the functionality of the <code>makeAPizza</code> and <code>makeAVeggiePizza</code> functions</li> <li class=\"slide__exercise__header__list--item\">BONUS: Create your own function with parameters. This function could do anything!</li> </ol> </td> </tr> </tbody> </table> </div> </div> </div> </section> <section class=\"slide\" data-background-color=\"black\"> <header class=\"slide__header-intro\"> <h2 class=\"slide__header-intro--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content\"> <h1 class=\"slide__title--white\">Return Statements</h1> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">Return Statement</h2> <div class=\"slide__container\"> <ul class=\"slide__list margin-left-2\"> <li class=\"slide__list-item\">Ends function’s execution.</li> <li class=\"slide__list-item\">Returns a value — the result of running the function.</li> <li class=\"slide__list-item\"><code class=\"color-light-blue\">console.log()</code> is only useful for the developer.</li> </ul> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content height-100-p\"> <h2 class=\"slide__title\">Returning values</h2> <div class=\"slide__container height-100-p\"> <pre class=\"slide__pre margin-top-1 width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript medium height-100-p\" data-trim=\"\">\nfunction subtract(num1, num2) {\n  return num1 - num2;\n}\n\nsubtract(10,5);\n=> 5\n\t\t\t\t\t\t</code></pre> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content height-100-p\"> <h2 class=\"slide__title\">Return stops a functions's execution</h2> <div class=\"slide__container height-100-p\"> <pre class=\"slide__pre margin-top-1 width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript medium height-100-p\" data-trim=\"\">\nfunction speak(words) {\n  return words;\n\n  // The following code will not run:\n  let x = 1;\n  let y = 2;\n  console.log(x + y)\n}\n\nspeak('Hey!');\n// \"Hey!\"\n\t\t\t\t\t\t</code></pre> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Lab - Using parameters</h2> </header> <div class=\"slide__content\"> <div class=\"slide__container-flex\"> <img class=\"slide__image slide__image--exercise width-10\" src=\"https://pages.git.generalassemb.ly/wilson-espina/jsd-slides/8faa6e9d60b96972f2f360256eb7bca9.png\" alt=\"Exercise\"> <div class=\"slide__exercise\"> <p class=\"slide__exercise__header\">Key Objective</p> <ul class=\"slide__exercise__header__list\"> <li class=\"slide__exercise__header__list--item\">Create and call a function that accepts parameters to solve a problem</li> </ul> <p class=\"slide__exercise__header\">Type of Exercise</p> <ul class=\"slide__exercise__header__list\"> <li class=\"slide__exercise__header__list--item\">Individual / Pairs</li> </ul> <p class=\"slide__exercise__header\">Location</p> <ul class=\"slide__exercise__header__list\"> <li class=\"slide__exercise__header__list--item color-dark-blue\">starter-code > 5-price-calculator</li> </ul> <p class=\"slide__exercise__header\">Timing</p> <table class=\"slide__table\"> <tbody> <tr> <td class=\"slide-timing\"> <h2 class=\"slide-timing__header\">10 mins</h2> </td> <td> <ol class=\"slide__exercise__header__list\"> <li class=\"slide__exercise__header__list--item\">Write code to to calculate a customer's total cost in pounds based on product price, tax rate, shipping cost, and the currency they're using for the purchase (pounds or euros).</li> <li class=\"slide__exercise__header__list--item\">BONUS 1: Convert your function to assume a currency of \"pounds\" by default.</li> <li class=\"slide__exercise__header__list--item\">BONUS 2: Convert your function to an arrow function.</li> </ol> </td> </tr> </tbody> </table> </div> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">Learning Objectives - Review</h2> <ul class=\"slide__list\"> <li class=\"slide__list-item\">Differentiate between <code>true</code>, <code>false</code>, 'truth-y', and 'false-y'</li> <li class=\"slide__list-item\">Use <code>if/else</code> conditionals to control program flow based on boolean conditions</li> <li class=\"slide__list-item\">Use comparison operators to evaluate and compare statements</li> <li class=\"slide__list-item\">Describe how parameters and arguments relate to functions</li> <li class=\"slide__list-item\">Create and call a function that accepts parameters to solve a problem</li> <li class=\"slide__list-item\">Return a value from a function using the <em>return</em> keyword</li>  </ul> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">Lookahead to Next Lesson (27/05/20)</h2> <h2 class=\"slide__title\">Scope & Variables</h2> <ul class=\"slide__list\"> <li class=\"slide__list-item\">Understand what is scope</li> <li class=\"slide__list-item\">Understand how scope works</li> <li class=\"slide__list-item\">Determine the scope of local and global variables</li> <li class=\"slide__list-item\">Describe what hoisting does</li> </ul> </div> </section> <section class=\"slide\" data-background-color=\"black\"> <header class=\"slide__header-intro\"> <h2 class=\"slide__header-intro--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content\"> <div class=\"slide__container-center margin-top-10\"> <h1 class=\"slide__title--white\">Q&A</h1> </div> </div> </section> <section class=\"slide\" data-background-color=\"black\"> <header class=\"slide__header-intro\"> <h2 class=\"slide__header-intro--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content\"> <div class=\"slide__container-center margin-top-10\"> <h1 class=\"slide__title--white\">Homework</h1> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">Homework Repo</h2> <div class=\"slide__container\"> <img class=\"slide__image width-30\" src=\"https://pages.git.generalassemb.ly/wilson-espina/jsd-slides/e76d84e888daeac7ab7bd721f845e33f.png\" alt=\"Forking instructions\"> <ol class=\"slide__list padding-left-2 margin-top-2\"> <li class=\"slide__list-item--small\">Head to <a href=\"https://git.generalassemb.ly/wilson-espina/jsd-9-homework\">https://git.generalassemb.ly/wilson-espina/jsd-9-homework</a></li> <li class=\"slide__list-item--small\">Click 'Fork' and following instruction on how to fork the repo.</li> <li class=\"slide__list-item--small\">Click 'Clone or Download' and copy git link (Make sure it says Clone with HTTPS).</li> <li class=\"slide__list-item--small\"><code>cd</code> to your <code>Documents/JSD</code> directory.</li> <li class=\"slide__list-item--small\">Type <code>git clone</code> and paste the URL and hit <code>return</code>.</li> </ol> </div> </div> </section> <section class=\"slide\" data-background-color=\"black\"> <header class=\"slide__header-intro\"> <h2 class=\"slide__header-intro--title\">Conditionals & Functions</h2> </header> <div class=\"slide__content\"> <div class=\"slide__container-center margin-top-10\"> <h1 class=\"slide__title--white\">Exit Ticket</h1> <p class=\"slide__text color-white\">(Lesson 04)</p> </div> </div> </section> </div> </div> <script src=\"https://cdnjs.cloudflare.com/ajax/libs/reveal.js/3.6.0/js/reveal.min.js\"></script> <script src=\"https://cdnjs.cloudflare.com/ajax/libs/reveal.js/3.6.0/lib/js/head.min.js\"></script> <script>var i=\"https://cdnjs.cloudflare.com/ajax/libs/reveal.js/3.6.0/\";Reveal.initialize({slideNumber:!0,controls:!0,history:!0,transition:\"fade\",center:!1,progress:!1,dependencies:[{src:\"\".concat(i,\"plugin/highlight/highlight.min.js\"),async:!0,callback:function(){hljs.initHighlightingOnLoad()}}]});</script>\n</body></html>"},"sourceMaps":null,"error":null,"hash":"d97628e0883e4ad9bef9ad3232a20892","cacheData":{"env":{}}}
{"id":"src/week-02/lesson-04/index.html","dependencies":[{"name":"./../../../favicon-32x32.png","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/favicon-32x32.png","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-04/index.html"},{"name":"./../../../favicon-16x16.png","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/favicon-16x16.png","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-04/index.html"},{"name":"./../../scss/main.scss","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/scss/main.scss","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-04/index.html"},{"name":"./../../assets/images/ga/ga-logo.png","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/assets/images/ga/ga-logo.png","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-04/index.html"},{"name":"./../../assets/images/general/learning-objective.jpg","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/assets/images/general/learning-objective.jpg","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-04/index.html"},{"name":"./../../assets/images/week-2/control-flow.png","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/assets/images/week-2/control-flow.png","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-04/index.html"},{"name":"./../../assets/images/general/exercise.png","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/assets/images/general/exercise.png","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-04/index.html"},{"name":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/package.json","includedInParent":true,"mtime":1587821841722}],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n\t<meta charset=\"UTF-8\">\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t<title>JSD | Lesson 04</title>\n\t<link rel=\"icon\" type=\"image/png\" href=\"/14e882d3bf96f36922a4faba43b30f10.png\" sizes=\"32x32\">\n\t<link rel=\"icon\" type=\"image/png\" href=\"/7181b75b553f3a5273f64c28442c5440.png\" sizes=\"16x16\">\n\t<link href=\"https://fonts.googleapis.com/css?family=Merriweather:400,400i,700\" rel=\"stylesheet\">\n\t<link rel=\"stylesheet\" href=\"/0f7bc6b0448cbca0959b2e11d9ee62f6.css\">\n</head>\n\n<body>\n\t<div class=\"reveal\">\n\t\t<div class=\"slides\">\n\t\t\t<section class=\"slide\" data-background-color=\"black\">\n\t\t\t\t<header class=\"slide__header-intro\">\n\t\t\t\t\t<img class=\"slide__header-intro--logo height-100-p\" src=\"/672f17cf708d8465adf1b62be5581a45.png\" alt=\"General Assembly logo\">\n\t\t\t\t\t<h2 class=\"slide__header-intro--title\">General Assembly</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content\">\n\t\t\t\t\t<h1 class=\"slide__title--white\">Conditionals & Functions</h1>\n\t\t\t\t\t<h3 class=\"slide__name white\">Wilson Espina</h3>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\">\n\t\t\t\t<header class=\"slide__header\">\n\t\t\t\t\t<h2 class=\"slide__header--title\">Review</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content\">\n\t\t\t\t\t<h1 class=\"slide__title--black\">What did we do last lesson?</h1>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\">\n\t\t\t\t<header class=\"slide__header\">\n\t\t\t\t\t<h2 class=\"slide__header--title\">Conditionals & Functions</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content\">\n\t\t\t\t\t<div class=\"slide__container-flex start\">\n\t\t\t\t\t\t<img class=\"slide__image slide__image--learning-objective margin-right-1 height-100-p width-5\" src=\"/b38918804c880b12f1a5d1ad37f53354.jpg\" alt=\"Learning Objective\">\n\t\t\t\t\t\t<h2 class=\"slide__title\">Learning Objectives</h2>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p class=\"slide__text\">At the end of this class, you will be able to:</p>\n\t\t\t\t\t<ul class=\"slide__list\">\n\t\t\t\t\t\t<li class=\"slide__list--item\">Differentiate between true, false, 'truth-y', and 'false-y'</li>\n\t\t\t\t\t\t<li class=\"slide__list--item\">Use <code>if/else</code> conditionals to control program flow\n\t\t\t\t\t\t\tbased on boolean conditions</li>\n\t\t\t\t\t\t<li class=\"slide__list--item\">Use comparison operators to evaluate and compare statements</li>\n\t\t\t\t\t\t<li class=\"slide__list--item\">Describe how parameters and arguments relate to functions</li>\n\t\t\t\t\t\t<li class=\"slide__list--item\">Create and call a function that accepts parameters to solve a\n\t\t\t\t\t\t\tproblem</li>\n\t\t\t\t\t\t<li class=\"slide__list--item\">Return a value from a function using the <em>return</em> keyword\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\">\n\t\t\t\t<header class=\"slide__header\">\n\t\t\t\t\t<h2 class=\"slide__header--title\">Conditionals & Functions</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content\">\n\t\t\t\t\t<h2 class=\"slide__title\">Agenda</h2>\n\t\t\t\t\t<ul class=\"slide__list\">\n\t\t\t\t\t\t<li class=\"slide__list--item\">Conditionals</li>\n\t\t\t\t\t\t<li class=\"slide__list--item\">Logical operators </li>\n\t\t\t\t\t\t<li class=\"slide__list--item\">Truthy & Falsy</li>\n\t\t\t\t\t\t<li class=\"slide__list--item\">Functions</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\" data-background-color=\"black\">\n\t\t\t\t<header class=\"slide__header-intro\">\n\t\t\t\t\t<h2 class=\"slide__header-intro--title\">Conditionals & Functions</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content\">\n\t\t\t\t\t<h1 class=\"slide__title--white\">Conditionals</h1>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\">\n\t\t\t\t<header class=\"slide__header\">\n\t\t\t\t\t<h2 class=\"slide__header--title\">Conditionals & Functions</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content\">\n\t\t\t\t\t<h2 class=\"slide__title\">Conditional Statements</h2>\n\t\t\t\t\t<div class=\"slide__container-flex\">\n\t\t\t\t\t\t<ul class=\"slide__list\">\n\t\t\t\t\t\t\t<li class=\"slide__list--item\">Conditional statements are a way of essentially skipping over a block of code if it does not pass a boolean expression</li>\n\t\t\t\t\t\t\t<li class=\"slide__list--item\">Known as <em>control flow statements</em>, because they let the program make decisions about which statement should be executed next, rather than just going in order</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<img class=\"slide__image slide__image--control-flow height-100-p width-20\" src=\"/fb791fa7c3cc55808e9e8a62651be62b.png\" alt=\"Control flow diagram\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\">\n\t\t\t\t<header class=\"slide__header\">\n\t\t\t\t\t<h2 class=\"slide__header--title\">Conditionals & Functions</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content\">\n\t\t\t\t\t<h2 class=\"slide__title\">Philosophical JavaScript</h2>\n\t\t\t\t\t<div class=\"slide__container\">\n\t\t\t\t\t\t<div class=\"slide__container-start\">\n\t\t\t\t\t\t\t<img class=\"slide__image slide__image--control-flow height-100-p width-20\" src=\"https://media.giphy.com/media/l3nWhI38IWDofyDrW/giphy.gif\" alt=\"Pensive statue\">\n\t\t\t\t\t\t\t<p class=\"slide__text margin-top-2\">JavaScript always tries to look for truth</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\">\n\t\t\t\t<header class=\"slide__header\">\n\t\t\t\t\t<h2 class=\"slide__header--title\">Conditionals & Functions</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content\">\n\t\t\t\t\t<h2 class=\"slide__title\">Block Statements</h2>\n\t\t\t\t\t<ul class=\"slide__list\">\n\t\t\t\t\t\t<li class=\"slide__list--item\">Statements meant to be executed after a control flow operation will be grouped into what is called a <em>block statement</em></li>\n\t\t\t\t\t\t<li class=\"slide__list--item\">These statements are wrapped into a pair of curly braces:</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<pre class=\"slide__pre width-100-p height-100-p margin-top-2\"><code class=\"hljs slide__code slide__code--middle javascript small\" data-trim=\"\">\n{\n  console.log(\"hello\");\n  console.log(\"good bye\");\n}\n\t\t\t\t\t</code></pre>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\">\n\t\t\t\t<header class=\"slide__header\">\n\t\t\t\t\t<h2 class=\"slide__header--title\">Conditionals & Functions</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content\">\n\t\t\t\t\t<h2 class=\"slide__title\">If Statement</h2>\n\t\t\t\t\t<i class=\"slide__icon\">✅</i>\n\t\t\t\t\t<pre class=\"slide__pre width-100-p height-100-p margin-bottom-2\"><code class=\"hljs slide__code slide__code--middle javascript small\" data-trim=\"\">\nif (expression) {\n  code\n}\n\t\t\t\t\t</code></pre>\n\t\t\t\t\t<i class=\"slide__icon\">❌</i>\n\t\t\t\t\t<pre class=\"slide__pre width-100-p height-100-p margin-bottom-2\"><code class=\"hljs slide__code slide__code--middle javascript small\" data-trim=\"\">\nif (expression) { code }\n\n\t\t\t\t\t</code></pre>\n\t\t\t\t\t<ul class=\"slide__list fragment\">\n\t\t\t\t\t\t<li class=\"slide__list--item\">Both versions will still be be interpreted as valid JavaScript</li>\n\t\t\t\t\t\t<li class=\"slide__list--item\">The correct version is best practice for code readability</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\">\n\t\t\t\t<header class=\"slide__header\">\n\t\t\t\t\t<h2 class=\"slide__header--title\">Conditionals & Functions</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content\">\n\t\t\t\t\t<h2 class=\"slide__title\">Comparison Operators</h2>\n\t\t\t\t\t<div class=\"slide__container-flex\">\n\t\t\t\t\t\t<table class=\"slide__table\">\n\t\t\t\t\t\t\t<tbody class=\"slide__body slide__body--comparison-operators\">\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td class=\"col-25-p\">\n\t\t\t\t\t\t\t\t\t\t<code class=\"slide__code small bold\">></code>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td class=\"col-75-p\">\n\t\t\t\t\t\t\t\t\t\t<p class=\"slide__text slide__text--table\">greater than</p>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td class=\"col-25-p\">\n\t\t\t\t\t\t\t\t\t\t<code class=\"slide__code small bold\">>=</code>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td class=\"col-75-p\">\n\t\t\t\t\t\t\t\t\t\t<p class=\"slide__text slide__text--table\">greater than or equal to</p>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td class=\"col-25-p\">\n\t\t\t\t\t\t\t\t\t\t<code class=\"slide__code small bold\"><</code>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td class=\"col-75-p\">\n\t\t\t\t\t\t\t\t\t\t<p class=\"slide__text slide__text--table\">less than</p>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td class=\"col-25-p\">\n\t\t\t\t\t\t\t\t\t\t<code class=\"slide__code small bold\">===</code>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td class=\"col-75-p\">\n\t\t\t\t\t\t\t\t\t\t<p class=\"slide__text slide__text--table\">strict equal, type and value</p>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td class=\"col-25-p\">\n\t\t\t\t\t\t\t\t\t\t<code class=\"slide__code small bold\">==</code>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td class=\"col-75-p\">\n\t\t\t\t\t\t\t\t\t\t<p class=\"slide__text slide__text--table\">coercive equal (AVOID)</p>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td class=\"col-25-p\">\n\t\t\t\t\t\t\t\t\t\t<code class=\"slide__code small bold\">!==</code>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td class=\"col-75-p\">\n\t\t\t\t\t\t\t\t\t\t<p class=\"slide__text slide__text--table\">strict not equal, type and value</p>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td class=\"col-25-p\">\n\t\t\t\t\t\t\t\t\t\t<code class=\"slide__code small bold\">!=</code>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td class=\"col-75-p\">\n\t\t\t\t\t\t\t\t\t\t<p class=\"slide__text slide__text--table\">coercive not equal (AVOID)</p>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t\t<div class=\"slide__container margin-left-2 fragment\">\n\t\t\t\t\t\t\t<pre class=\"slide__pre width-40\"><code class=\"hljs slide__code slide__code--middle javascript small\" data-trim=\"\">\n-1 > 2\n//=> false\n\n123 < 6;\n//=> false\n\n0.12 >= 0.0023;\n//=> true\n\t\t\t\t\t\t\t</code></pre>\n\t\t\t\t\t\t\t<ul class=\"slide__list margin-top-1\">\n\t\t\t\t\t\t\t\t<li class=\"slide__list--item--small\">Always returns a <em>Boolean</em> value</li>\n\t\t\t\t\t\t\t</ul>\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\">\n\t\t\t\t<header class=\"slide__header\">\n\t\t\t\t\t<h2 class=\"slide__header--title\">Conditionals & Functions</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content\">\n\t\t\t\t\t<h2 class=\"slide__title\">Type coercion</h2>\n\t\t\t\t\t<div class=\"slide__container-flex\">\n\t\t\t\t\t\t<pre class=\"slide__pre width-100-p\"><code class=\"hljs slide__code slide__code--middle javascript small\" data-trim=\"\">\n'A' > 'a'\n//=> false\n\n'b' > 'a';\n//=> true\n\n12 > '12';\n//=> false\n\n12 >= '12';\n//=> true\n\n'Glow' > 'Glee';\n//=> true\n\t\t\t\t\t\t</code></pre>\n\t\t\t\t\t\t<ul class=\"slide__list margin-left-2 fragment\">\n\t\t\t\t\t\t\t<li class=\"slide__list--item slide__list--item--medium\">JavaScript assumes you mean something else when data types don't match with non-strict comparison</li>\n\t\t\t\t\t\t\t<li class=\"slide__list--item slide__list--item--medium\">This can be the source of frustration for some developers, since most languages do not implicitly convert strings to numbers</li>\n\t\t\t\t\t\t\t<li class=\"slide__list--item slide__list--item--medium\">JavaScript uses the so-called <em>dictionary</em> or <em>lexicographical</em> order</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\">\n\t\t\t\t<header class=\"slide__header\">\n\t\t\t\t\t<h2 class=\"slide__header--title\">Conditionals & Functions</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content height-100-p\">\n\t\t\t\t\t<h2 class=\"slide__title\">If statement</h2>\n\t\t\t\t\t<div class=\"slide__container-flex height-100-p\">\n\t\t\t\t\t\t<pre class=\"slide__pre width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript medium height-100-p\" data-trim=\"\">\nlet weather = \"sunny\";\n\nif (weather === \"sunny\") {\n  console.log(\"Grab your sunglasses\");\n}\n\t\t\t\t\t\t</code></pre>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\">\n\t\t\t\t<header class=\"slide__header\">\n\t\t\t\t\t<h2 class=\"slide__header--title\">Conditionals & Functions</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content height-100-p\">\n\t\t\t\t\t<h2 class=\"slide__title\">If / else statement</h2>\n\t\t\t\t\t<div class=\"slide__container-flex height-100-p\">\n\t\t\t\t\t\t<pre class=\"slide__pre width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript medium height-100-p\" data-trim=\"\">\nlet weather = \"sunny\";\n\nif (weather === \"sunny\") {\n  console.log(\"Grab your sunglasses\");\n} else {\n  console.log(\"Grab a coat\");\n}\n\t\t\t\t\t\t</code></pre>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\">\n\t\t\t\t<header class=\"slide__header\">\n\t\t\t\t\t<h2 class=\"slide__header--title\">Conditionals & Functions</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content height-100-p\">\n\t\t\t\t\t<h2 class=\"slide__title\">Else if Statement</h2>\n\t\t\t\t\t<div class=\"slide__container-flex height-100-p\">\n\t\t\t\t\t\t<pre class=\"slide__pre width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript medium height-100-p\" data-trim=\"\">\nlet weather = \"sunny\";\n\nif (weather === \"sunny\") {\n  console.log(\"Grab your sunglasses\");\n} else if (weather === \"rainy\") {\n  console.log(\"Take an umbrella\");\n} else {\n  console.log(\"Grab a coat\");\n}\n\t\t\t\t\t\t</code></pre>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\">\n\t\t\t\t<header class=\"slide__header\">\n\t\t\t\t\t<h2 class=\"slide__header--title\">Conditionals & Functions</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content height-100-p\">\n\t\t\t\t\t<h2 class=\"slide__title\">Ternary Operator</h2>\n\t\t\t\t\t<ul class=\"slide__list margin-left-2\">\n\t\t\t\t\t\t<li class=\"slide__list--item slide__list--item--medium\">You can think about the ternary operator as a concise \"if-else in one line\"</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<div class=\"slide__container-flex height-100-p\">\n\t\t\t\t\t\t<pre class=\"slide__pre margin-top-1 width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript medium height-100-p\" data-trim=\"\">\n(expression) ? trueCode : falseCode;\n\t\t\t\t\t\t</code></pre>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\">\n\t\t\t\t<header class=\"slide__header\">\n\t\t\t\t\t<h2 class=\"slide__header--title\">Conditionals & Functions</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content height-100-p\">\n\t\t\t\t\t<h2 class=\"slide__title\">Ternary Operator</h2>\n\t\t\t\t\t<ul class=\"slide__list margin-left-2\">\n\t\t\t\t\t\t<li class=\"slide__list--item slide__list--item--medium\">Can produce one of two values, which can be assigned to a variable in the same statement</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<div class=\"slide__container-flex height-100-p\">\n\t\t\t\t\t\t<pre class=\"slide__pre margin-top-1 width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript medium height-100-p\" data-trim=\"\">\nlet drink = (expression) ? trueCode : falseCode;\n\nlet sunny = true;\nlet drink = sunny ? 'beer' : 'coffee';\nconsole.log(drink) // beer\n\t\t\t\t\t\t</code></pre>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\">\n\t\t\t\t<header class=\"slide__header\">\n\t\t\t\t\t<h2 class=\"slide__header--title\">Conditionals & Functions</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content height-100-p\">\n\t\t\t\t\t<h2 class=\"slide__title\">Switch Statement</h2>\n\t\t\t\t\t<ul class=\"slide__list margin-left-2\">\n\t\t\t\t\t\t<li class=\"slide__list--item slide__list--item--medium\">The switch statement can be used for multiple branches based on a number or string:</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<div class=\"slide__container-flex height-100-p\">\n\t\t\t\t\t\t<pre class=\"slide__pre margin-top-1 width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript small height-100-p\" data-trim=\"\">\nconst food = 'apple';\n\nswitch(food) {\n\tcase 'pear':\n\t  console.log('I like pears');\n\t  break;\n\tcase 'apple':\n\t  console.log('I like apples');\n\t  break;\n\tdefault:\n\t  console.log('No favourite');\n}\n//=> I like apples\n\t\t\t\t\t\t</code></pre>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\">\n\t\t\t\t<header class=\"slide__header\">\n\t\t\t\t\t<h2 class=\"slide__header--title\">Conditionals & Functions</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content height-100-p\">\n\t\t\t\t\t<h2 class=\"slide__title\">Logical Operators</h2>\n\t\t\t\t\t<ul class=\"slide__list margin-left-2\">\n\t\t\t\t\t\t<li class=\"slide__list--item slide__list--item--medium\">Operators that let you chain conditional expressions</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<table class=\"slide__table margin-top-1\">\n\t\t\t\t\t\t<tbody class=\"slide__body slide__body--logical-operators\">\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td class=\"col-15-p\">\n\t\t\t\t\t\t\t\t\t<code class=\"slide__code small bold\">&&</code>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td class=\"col-15-p\">\n\t\t\t\t\t\t\t\t\t<code class=\"slide__code small bold\">AND</code>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td class=\"col-75-p\">\n\t\t\t\t\t\t\t\t\t<p class=\"slide__text slide__text--table\">Returns <code>true</code> when both left and right values are true</p>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td class=\"col-15-p\">\n\t\t\t\t\t\t\t\t\t<code class=\"slide__code small bold\">||</code>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td class=\"col-15-p\">\n\t\t\t\t\t\t\t\t\t<code class=\"slide__code small bold\">OR</code>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td class=\"col-75-p\">\n\t\t\t\t\t\t\t\t\t<p class=\"slide__text slide__text--table\">Returns <code>true</code> when at least one of the left or right values is <code>true</code></p>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td class=\"col-15-p\">\n\t\t\t\t\t\t\t\t\t<code class=\"slide__code small bold\">!</code>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td class=\"col-15-p\">\n\t\t\t\t\t\t\t\t\t<code class=\"slide__code small bold\">NOT</code>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td class=\"col-75-p\">\n\t\t\t\t\t\t\t\t\t<p class=\"slide__text slide__text--table\">Takes a single value and returns the opposite Boolean value</p>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\">\n\t\t\t\t<header class=\"slide__header\">\n\t\t\t\t\t<h2 class=\"slide__header--title\">Conditionals & Functions</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content\">\n\t\t\t\t\t<h2 class=\"slide__title\">&& (AND)</h2>\n\t\t\t\t\t<div class=\"slide__container\">\n\t\t\t\t\t\t<ul class=\"slide__list margin-left-2\">\n\t\t\t\t\t\t\t<li class=\"slide__list--item slide__list--item--medium\">The <code>&&</code> operator requires both left and right values to be true in order to return <em>true</em>:</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<div class=\"slide__container-flex\">\n\t\t\t\t\t\t\t<pre class=\"slide__pre width-100-p\"><code class=\"hljs slide__code slide__code--middle javascript medium height-100-p\" data-trim=\"\">\ntrue && true\n//=> true\n\t\t\t\t\t\t\t</code></pre>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"slide__container margin-top-1 fragment\">\n\t\t\t\t\t\t<ul class=\"slide__list margin-left-2\">\n\t\t\t\t\t\t\t<li class=\"slide__list--item slide__list--item--medium\">Any other combination is <em>false</em></li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<div class=\"slide__container-flex\">\n\t\t\t\t\t\t\t<pre class=\"slide__pre width-100-p\"><code class=\"hljs slide__code slide__code--middle javascript medium height-100-p\" data-trim=\"\">\ntrue && false\n//=> false\n\nfalse && false\n//=> false\n\t\t\t\t\t\t\t</code></pre>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\">\n\t\t\t\t<header class=\"slide__header\">\n\t\t\t\t\t<h2 class=\"slide__header--title\">Conditionals & Functions</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content\">\n\t\t\t\t\t<h2 class=\"slide__title\">|| (OR)</h2>\n\t\t\t\t\t<div class=\"slide__container\">\n\t\t\t\t\t\t<ul class=\"slide__list margin-left-2\">\n\t\t\t\t\t\t\t<li class=\"slide__list--item slide__list--item--medium\">The <code>||</code> operator requires just one of the left or right values to be true in order to return <em>true</em></li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<div class=\"slide__container-flex\">\n\t\t\t\t\t\t\t<pre class=\"slide__pre width-100-p\"><code class=\"hljs slide__code slide__code--middle javascript medium height-100-p\" data-trim=\"\">\ntrue || false\n//=> true\n\nfalse || true\n//=> true\n\nfalse || false\n//=> false\n\t\t\t\t\t\t\t</code></pre>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\" data-background-color=\"black\">\n\t\t\t\t<header class=\"slide__header-intro\">\n\t\t\t\t\t<h2 class=\"slide__header-intro--title\">Conditionals & Functions</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content\">\n\t\t\t\t\t<h1 class=\"slide__title--white\">Truthy & Falsy</h1>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\">\n\t\t\t\t<header class=\"slide__header\">\n\t\t\t\t\t<h2 class=\"slide__header--title\">Conditionals & Functions</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content height-100-p\">\n\t\t\t\t\t<h2 class=\"slide__title\">Falsy Values</h2>\n\t\t\t\t\t<p class=\"slide__text\">All of the following become false when converted to a Boolean:</p>\n\t\t\t\t\t<pre class=\"slide__pre margin-top-2 width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript small\" data-trim=\"\">\nfalse\n0\n'' // (empty string)\nNaN\nnull\nundefined\n\t\t\t\t\t</code></pre>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\">\n\t\t\t\t<header class=\"slide__header\">\n\t\t\t\t\t<h2 class=\"slide__header--title\">Conditionals & Functions</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content height-100-p\">\n\t\t\t\t\t<h2 class=\"slide__title\">Converting to Boolean</h2>\n\t\t\t\t\t<ul class=\"slide__list margin-left-2\">\n\t\t\t\t\t\t<li class=\"slide__list--item slide__list--item--small\">Adding <em>!</em> before a value returns the <strong>inverse</strong> of the value as a Boolean</li>\n\t\t\t\t\t\t<li class=\"slide__list--item slide__list--item--small\">Adding <em>!!</em> before a value gives you the <strong>original</strong> value as a Boolean:</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<pre class=\"slide__pre margin-top-1 width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript xsmall\" data-trim=\"\">\n!!1\n//=> true\n\n!!0\n//=> false\n\n!![]\n//=> true\n\n!!{}\n//=> true\n\n!!null\n//=> false\n\n!!\"\"\n//=> false\n\t\t\t\t\t</code></pre>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\">\n\t\t\t\t<header class=\"slide__header\">\n\t\t\t\t\t<h2 class=\"slide__header--title\">Lab</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content\">\n\t\t\t\t\t<div class=\"slide__container-flex\">\n\t\t\t\t\t\t<img class=\"slide__image slide__image--exercise width-10\" src=\"/8faa6e9d60b96972f2f360256eb7bca9.png\" alt=\"Exercise\">\n\t\t\t\t\t\t<div class=\"slide__exercise\">\n\t\t\t\t\t\t\t<p class=\"slide__exercise__header\">Type of Exercise</p>\n\t\t\t\t\t\t\t<ul class=\"slide__exercise__header__list\">\n\t\t\t\t\t\t\t\t<li class=\"slide__exercise__header__list--item\">Pairs</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t<p class=\"slide__exercise__header\">Location</p>\n\t\t\t\t\t\t\t<ul class=\"slide__exercise__header__list\">\n\t\t\t\t\t\t\t\t<li class=\"slide__exercise__header__list--item\">starter-code > 4-ages-lab</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t<p class=\"slide__exercise__header\">Timing</p>\n\t\t\t\t\t\t\t<table class=\"slide__table\">\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td class=\"slide-timing\">\n\t\t\t\t\t\t\t\t\t\t\t<h2 class=\"slide-timing__header\">15 mins</h2>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t<ol class=\"slide__exercise__header__list\">\n\t\t\t\t\t\t\t\t\t\t\t\t<li class=\"slide__exercise__header__list--item\">Write a program that outputs results based on users’ age. Use the list of conditions in the app.js file</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li class=\"slide__exercise__header__list--item\">BONUS 1: Rewrite your code to allow a user to enter the exponent value, rather than hard-coding it into your program. (Hint: Read up on the window.prompt method.)</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li class=\"slide__exercise__header__list--item\">BONUS 2: Rewrite your code to use a switch statement rather than if and else statements.)</li>\n\t\t\t\t\t\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\" data-background-color=\"black\">\n\t\t\t\t<header class=\"slide__header-intro\">\n\t\t\t\t\t<h2 class=\"slide__header-intro--title\">Conditionals & Functions</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content\">\n\t\t\t\t\t<h1 class=\"slide__title--white\">Functions</h1>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\t</div>\n\t</div>\n\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/reveal.js/3.6.0/js/reveal.min.js\"></script>\n\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/reveal.js/3.6.0/lib/js/head.min.js\"></script>\n\t<script>var srcUrlPrefix = 'https://cdnjs.cloudflare.com/ajax/libs/reveal.js/3.6.0/';\nReveal.initialize({\n  slideNumber: true,\n  controls: true,\n  history: true,\n  transition: 'fade',\n  center: false,\n  progress: false,\n  dependencies: [{\n    src: \"\".concat(srcUrlPrefix, \"plugin/highlight/highlight.min.js\"),\n    async: true,\n    callback: function callback() {\n      hljs.initHighlightingOnLoad();\n    }\n  }]\n});</script>\n</body>\n\n</html>"},"sourceMaps":null,"error":null,"hash":"a0eca21b0893651c0630e6c9207682bd","cacheData":{"env":{}}}
{"id":"src/week-02/lesson-04/index.html","dependencies":[{"name":"./../../../favicon-32x32.png","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/favicon-32x32.png","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-04/index.html"},{"name":"./../../../favicon-16x16.png","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/favicon-16x16.png","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-04/index.html"},{"name":"./../../scss/main.scss","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/scss/main.scss","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-04/index.html"},{"name":"./../../assets/images/ga/ga-logo.png","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/assets/images/ga/ga-logo.png","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-04/index.html"},{"name":"./../../assets/images/general/learning-objective.jpg","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/assets/images/general/learning-objective.jpg","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-04/index.html"},{"name":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/package.json","includedInParent":true,"mtime":1587821841722}],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n\t<meta charset=\"UTF-8\">\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t<title>JSD | Lesson 04</title>\n\t<link rel=\"icon\" type=\"image/png\" href=\"/14e882d3bf96f36922a4faba43b30f10.png\" sizes=\"32x32\">\n\t<link rel=\"icon\" type=\"image/png\" href=\"/7181b75b553f3a5273f64c28442c5440.png\" sizes=\"16x16\">\n\t<link href=\"https://fonts.googleapis.com/css?family=Merriweather:400,400i,700\" rel=\"stylesheet\">\n\t<link rel=\"stylesheet\" href=\"/0f7bc6b0448cbca0959b2e11d9ee62f6.css\">\n\t<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.18.1/styles/a11y-dark.min.css\">\n</head>\n\n<body>\n\t<div class=\"reveal\">\n\t\t<div class=\"slides\">\n\t\t\t<section class=\"slide\" data-background-color=\"black\">\n\t\t\t\t<header class=\"slide__header-intro\">\n\t\t\t\t\t<img class=\"slide__header-intro--logo height-100-p\" src=\"/672f17cf708d8465adf1b62be5581a45.png\" alt=\"General Assembly logo\">\n\t\t\t\t\t<h2 class=\"slide__header-intro--title\">General Assembly</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content\">\n\t\t\t\t\t<h1 class=\"slide__title--white\">Conditionals & Functions</h1>\n\t\t\t\t\t<h3 class=\"slide__name white\">Wilson Espina</h3>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\">\n\t\t\t\t<header class=\"slide__header\">\n\t\t\t\t\t<h2 class=\"slide__header--title\">Review</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content\">\n\t\t\t\t\t<h1 class=\"slide__title--black\">What did we do last lesson?</h1>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\">\n\t\t\t\t<header class=\"slide__header\">\n\t\t\t\t\t<h2 class=\"slide__header--title\">Conditionals & Functions</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content\">\n\t\t\t\t\t<div class=\"slide__container-flex start\">\n\t\t\t\t\t\t<img class=\"slide__image slide__image--learning-objective margin-right-1 height-100-p width-5\" src=\"/b38918804c880b12f1a5d1ad37f53354.jpg\" alt=\"Learning Objective\">\n\t\t\t\t\t\t<h2 class=\"slide__title\">Learning Objectives</h2>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p class=\"slide__text\">At the end of this class, you will be able to:</p>\n\t\t\t\t\t<ul class=\"slide__list\">\n\t\t\t\t\t\t<li class=\"slide__list--item\">Differentiate between true, false, 'truth-y', and 'false-y'</li>\n\t\t\t\t\t\t<li class=\"slide__list--item\">Use <code>if/else</code> conditionals to control program flow\n\t\t\t\t\t\t\tbased on boolean conditions</li>\n\t\t\t\t\t\t<li class=\"slide__list--item\">Use comparison operators to evaluate and compare statements</li>\n\t\t\t\t\t\t<li class=\"slide__list--item\">Describe how parameters and arguments relate to functions</li>\n\t\t\t\t\t\t<li class=\"slide__list--item\">Create and call a function that accepts parameters to solve a\n\t\t\t\t\t\t\tproblem</li>\n\t\t\t\t\t\t<li class=\"slide__list--item\">Return a value from a function using the <em>return</em> keyword\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\">\n\t\t\t\t<header class=\"slide__header\">\n\t\t\t\t\t<h2 class=\"slide__header--title\">Conditionals & Functions</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content\">\n\t\t\t\t\t<h2 class=\"slide__title\">Agenda</h2>\n\t\t\t\t\t<ul class=\"slide__list\">\n\t\t\t\t\t\t<li class=\"slide__list--item\">Conditionals</li>\n\t\t\t\t\t\t<li class=\"slide__list--item\">Logical operators </li>\n\t\t\t\t\t\t<li class=\"slide__list--item\">Truthy & Falsy</li>\n\t\t\t\t\t\t<li class=\"slide__list--item\">Functions</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\" data-background-color=\"black\">\n\t\t\t\t<header class=\"slide__header-intro\">\n\t\t\t\t\t<h2 class=\"slide__header-intro--title\">Conditionals & Functions</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content\">\n\t\t\t\t\t<h1 class=\"slide__title--white\">Conditionals</h1>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\">\n\t\t\t\t<header class=\"slide__header\">\n\t\t\t\t\t<h2 class=\"slide__header--title\">Conditionals & Functions</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content\">\n\t\t\t\t\t<h2 class=\"slide__title\">Conditional Statements</h2>\n\t\t\t\t\t<ul class=\"slide__list\">\n\t\t\t\t\t\t<li class=\"slide__list--item\">Conditional statements are a way of essentially skipping over a block of code if it does not pass a boolean expression</li>\n\t\t\t\t\t\t<li class=\"slide__list--item\">Known as <em>control flow statements</em>, because they let the program make decisions about which statement should be executed next, rather than just going in order</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section class=\"slide\">\n\t\t\t\t<header class=\"slide__header\">\n\t\t\t\t\t<h2 class=\"slide__header--title\">Conditionals & Functions</h2>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"slide__content\">\n\t\t\t\t\t<h2 class=\"slide__title\">If Statement</h2>\n\t\t\t\t\t<ul class=\"slide__list\">\n\t\t\t\t\t\t<li class=\"slide__list--item\">Conditional statements are a way of essentially skipping over a block of code if it does not pass a boolean expression</li>\n\t\t\t\t\t\t<li class=\"slide__list--item\">Known as <em>control flow statements</em>, because they let the program make decisions about which statement should be executed next, rather than just going in order</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\n\n\t\t\t</section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\t</div>\n\t</div>\n\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/reveal.js/3.6.0/js/reveal.min.js\"></script>\n\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/reveal.js/3.6.0/lib/js/head.min.js\"></script>\n\t<script>var srcUrlPrefix = 'https://cdnjs.cloudflare.com/ajax/libs/reveal.js/3.6.0/';\nReveal.initialize({\n  slideNumber: true,\n  controls: true,\n  history: true,\n  transition: 'fade',\n  center: false,\n  progress: false,\n  previewLinks: true,\n  dependencies: [{\n    src: \"\".concat(srcUrlPrefix, \"plugin/highlight/highlight.min.js\"),\n    async: true,\n    callback: function callback() {\n      hljs.initHighlightingOnLoad();\n    }\n  }]\n});</script>\n</body>\n\n</html>"},"sourceMaps":null,"error":null,"hash":"3a3c495a0efc1ff5085d6ee8a4354fd4","cacheData":{"env":{}}}
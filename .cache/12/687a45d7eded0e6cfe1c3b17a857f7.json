{"id":"TxUq","dependencies":[{"name":"./../../../favicon-32x32.png","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/favicon-32x32.png","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-1/index.html"},{"name":"./../../../favicon-16x16.png","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/favicon-16x16.png","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-1/index.html"},{"name":"./../../scss/main.scss","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/scss/main.scss","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-1/index.html"},{"name":"./../../assets/images/ga/ga-logo.png","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/assets/images/ga/ga-logo.png","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-1/index.html"},{"name":"./../../assets/images/week-2/chrome-console.png","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/assets/images/week-2/chrome-console.png","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-1/index.html"},{"name":"./../../assets/images/week-2/chrome-console-debug.png","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/assets/images/week-2/chrome-console-debug.png","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-1/index.html"},{"name":"./../../assets/images/general/exercise.png","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/assets/images/general/exercise.png","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-1/index.html"},{"name":"./../../assets/images/week-2/for-statement.png","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/assets/images/week-2/for-statement.png","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-1/index.html"},{"name":"./../../assets/images/week-2/for-each.png","dynamic":true,"resolved":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/assets/images/week-2/for-each.png","parent":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/src/week-02/lesson-1/index.html"},{"name":"/Users/wilsespi/Development/GA/_JSD/jsd-slides/package.json","includedInParent":true,"mtime":1587821569047}],"generated":{"html":"<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>JSD | Week 2 Lesson 1</title><link rel=\"icon\" type=\"image/png\" href=\"https://wilsonespina.github.io/GA-JSD/14e882d3bf96f36922a4faba43b30f10.png\" sizes=\"32x32\"><link rel=\"icon\" type=\"image/png\" href=\"https://wilsonespina.github.io/GA-JSD/7181b75b553f3a5273f64c28442c5440.png\" sizes=\"16x16\"><link href=\"https://fonts.googleapis.com/css?family=Merriweather:400,400i,700\" rel=\"stylesheet\"><link rel=\"stylesheet\" href=\"https://wilsonespina.github.io/GA-JSD/0f7bc6b0448cbca0959b2e11d9ee62f6.css\"><link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.18.1/styles/a11y-dark.min.css\"></head><body> <div class=\"reveal\"> <div class=\"slides\"> <section class=\"slide\" data-background-color=\"black\"> <header class=\"slide__header-intro\"> <img class=\"slide__header-intro--logo height-100-p\" src=\"https://wilsonespina.github.io/GA-JSD/672f17cf708d8465adf1b62be5581a45.png\" alt=\"General Assembly logo\"> <h2 class=\"slide__header-intro--title\">General Assembly</h2> </header> <div class=\"slide__content\"> <h1 class=\"slide__title--white\">Arrays and Loops</h1> <h3 class=\"slide__name white\">Wilson Espina</h3> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Review</h2> </header> <div class=\"slide__content\"> <h1 class=\"slide__title--black\">What did we do last lesson?</h1> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Arrays and Loops</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">Learning Objectives</h2> <p class=\"slide__text\">At the end of this class, you will be able to:</p> <ul class=\"slide__list\"> <li class=\"slide__list--item\">Run JavaScript in the Browser</li> <li class=\"slide__list--item\">Create arrays and access values in them</li> <li class=\"slide__list--item\">Build iterative loops using <em>for</em> statements.</li> <li class=\"slide__list--item\">Iterate over and manipulate values in an array. </li>  </ul> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Arrays and Loops</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">Agenda</h2> <ul class=\"slide__list\"> <li class=\"slide__list--item\">JavaScript in the Browser</li> <li class=\"slide__list--item\">Arrays</li> <li class=\"slide__list--item\">Loops</li> <li class=\"slide__list--item\">Array iterators</li> </ul> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Arrays and Loops</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">Chrome Console</h2> <p class=\"slide__text\">Access by pressing <em><code>cmd + alt + j</code></em></p> <img class=\"slide__image slide__image--chrome-console margin-top-2 width-100-p\" src=\"https://wilsonespina.github.io/GA-JSD/2529ef61af6b455d2a72e9866215f720.png\" alt=\"Chrome dev tools\"> <ul class=\"slide__list fragment\"> <li class=\"slide__list--item\">JavaScript can be run directly in the console</li> <li class=\"slide__list--item\">Useful to write and execute code quickly</li> </ul> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Arrays and Loops</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">Debugging</h2> <img class=\"slide__image slide__image--chrome-console-debug width-100-p\" src=\"https://wilsonespina.github.io/GA-JSD/68ebe373b678d52514b3bc6687d22619.png\" alt=\"Chrome dev debugging tools\"> <ul class=\"slide__list\"> <li class=\"slide__list--item\">Error messages can be useful when debugging code</li> <li class=\"slide__list--item\">Often verbose in saying what the mistake is and which line it's on</li> </ul> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Arrays and Loops</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">Arrays</h2> <p class=\"slide__text\">JavaScript arrays are used to store multiple values in a single variable.</p> <ul class=\"slide__list\"> <li class=\"slide__list--item slide__list--item--small\">Can be declared using an array literal <em><code>[ ]</code></em></li> <li class=\"slide__list--item slide__list--item--small\">Array items are separated by commas</li> </ul> <pre class=\"slide__pre margin-top-2 width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript small\" data-trim=\"\">\nlet a = ['dog', 'cat', 'hen'];\nundefined\n\na.length; // array property\n3\n\t\t\t\t\t\t</code></pre> <ul class=\"slide__list margin-top-2 fragment\"> <li class=\"slide__list--item slide__list--item--small\"><code>length</code> property is always one more than the highest index in the array.</li> <li class=\"slide__list--item slide__list--item--small\">Highest index in this case is <em>2</em></li> </ul> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Arrays and Loops</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">Getting values from an Array</h2> <ul class=\"slide__list\"> <li class=\"slide__list--item slide__list--item--small\">Array index starts from <em>0</em></li> </ul> <pre class=\"slide__pre margin-top-1 width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript small\" data-trim=\"\">\nlet a = ['dog', 'cat', 'hen'];\nundefined\n\na[0];\n\"dog\"\n\na[1];\n\"cat\"\n\na[2];\n\"hen\"\n\t\t\t\t\t\t</code></pre> <ul class=\"slide__list margin-top-1 fragment\"> <li class=\"slide__list--item slide__list--item--small\"><code>array.length</code> isn't necessarily the number of items in the array</li> <pre class=\"slide__pre width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript small\" data-trim=\"\">\na[100] = 'fox';\na.length; // 101\n\t\t\t\t\t\t</code></pre> </ul> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Arrays and Loops</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">Array Helper Methods</h2> <table class=\"slide__content__table\"> <thead> <tr> <th class=\"large-font\">Method</th> <th class=\"large-font\">Use</th> </tr> </thead> <tbody class=\"slide__content__table--arrays\"> <tr> <td class=\"col-25-p\"> <code class=\"slide__code small bold\">toString()</code> </td> <td class=\"col-75-p\"> <p class=\"slide__text slide__text--table\">Returns a single string consisting of the array elements converted to strings and separated by commas</p> </td> </tr> <tr> <td class=\"col-25-p\"> <code class=\"slide__code small bold\">join()</code> </td> <td class=\"col-75-p\"> <p class=\"slide__text slide__text--table\">Same as <code>toString()</code>, but allows you to pass a custom separator as an argument</p> </td> </tr> <tr> <td class=\"col-25-p\"> <code class=\"slide__code small bold\">concat()</code> </td> <td class=\"col-75-p\"> <p class=\"slide__text slide__text--table\">Merges two or more arrays together</p> </td> </tr> <tr> <td class=\"col-25-p\"> <code class=\"slide__code small bold\">pop()</code> </td> <td class=\"col-75-p\"> <p class=\"slide__text slide__text--table\">Removes and returns the item at the end of the array</p> </td> </tr> <tr> <td class=\"col-25-p\"> <code class=\"slide__code small bold\">push(item1, …, itemN)</code> </td> <td class=\"col-75-p\"> <p class=\"slide__text slide__text--table\">Adds one or more items to the end of the array</p> </td> </tr> <tr> <td class=\"col-25-p\"> <code class=\"slide__code small bold\">reverse()</code> </td> <td class=\"col-75-p\"> <p class=\"slide__text slide__text--table\">Reverses the array</p> </td> </tr> <tr> <td class=\"col-25-p\"> <code class=\"slide__code small bold\">shift()</code> </td> <td class=\"col-75-p\"> <p class=\"slide__text slide__text--table\">Removes and returns the item at the start of the array</p> </td> </tr> <tr> <td class=\"col-25-p\"> <code class=\"slide__code small bold\">unshift(item1, …, itemN)</code> </td> <td class=\"col-75-p\"> <p class=\"slide__text slide__text--table\">Adds one or more items to the start of the array</p> </td> </tr> </tbody> </table> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Activity</h2> </header> <div class=\"slide__content\"> <div class=\"slide__container-flex\"> <img class=\"slide__image slide__image--exercise width-10\" src=\"https://wilsonespina.github.io/GA-JSD/8faa6e9d60b96972f2f360256eb7bca9.png\" alt=\"Exercise\"> <div class=\"slide__exercise\"> <p class=\"slide__exercise__header\">Key Objective</p> <ul class=\"slide__exercise__header__list\"> <li class=\"slide__exercise__header__list--item\">Understand how to use and apply Array methods</li> </ul> <p class=\"slide__exercise__header\">Type of Exercise</p> <ul class=\"slide__exercise__header__list\"> <li class=\"slide__exercise__header__list--item\">Individual</li> </ul> <p class=\"slide__exercise__header\">Timing</p> <table class=\"slide__content__table\"> <tbody> <tr> <td class=\"slide-timing\"> <h2 class=\"slide-timing__header\">10 mins</h2> </td> <td> <ol class=\"slide__exercise__header__list\"> <li class=\"slide__exercise__header__list--item\">Download the starter code and open the folder in VS Code.</li> <li class=\"slide__exercise__header__list--item\">Open <code>index.html</code> file in your Browser and open the developer console</li> <li class=\"slide__exercise__header__list--item\">Answer questions 1-5</li> <li class=\"slide__exercise__header__list--item\">BONUS: Answer the questions 6-8</li> </ol> </td> </tr> </tbody> </table> </div> </div> </div> </section> <section class=\"slide\" data-background-color=\"black\"> <header class=\"slide__header-intro\"> <h2 class=\"slide__header-intro--title\">Arrays and Loops</h2> </header> <div class=\"slide__content\"> <h1 class=\"slide__title--white\">Iteration</h1> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Arrays and Loops</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">Iteration</h2> <p class=\"slide__text\">Iterating is a way of incrementally repeating a task, one at a time.</p> <div class=\"slide__container-center\"> <img class=\"slide__image slide__image--stacking-cat width-30\" src=\"https://media.giphy.com/media/E6OyZu1OU3emc/giphy.gif\" alt=\"Stacking cat\"> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Arrays and Loops</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">While</h2> <p class=\"slide__text\"><code>while</code> is a loop statement that will run while a condition is <code>true</code></p> <div class=\"slide__container\"> <ul class=\"slide__list\"> <li class=\"slide__list--item\">While loops are good for basic looping, but there's a possibility it will never get run</li> </ul> <pre class=\"slide__pre width-100-p height-100-p margin-top-2\"><code class=\"hljs slide__code slide__code--middle javascript small\" data-trim=\"\">\nwhile (true) {\n// an infinite loop!\n}\n\t\t\t\t\t\t\t</code></pre> <ul class=\"slide__list\"> <li class=\"slide__list--item fragment\">This would cause a Browser to break</li> </ul> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Arrays and Loops</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">Do-While</h2> <p class=\"slide__text\">Using a <code>do-while</code> loop makes sure that the body of the loop is executed at least once</p> <div class=\"slide__container\"> <ul class=\"slide__list\"> <li class=\"slide__list--item\"><code>while()</code> isn't evaluated until after the block of code runs</li> </ul> <pre class=\"slide__pre width-100-p height-100-p margin-top-2\"><code class=\"hljs slide__code slide__code--middle javascript small\" data-trim=\"\">\nlet input = 0;\ndo {\n  console.log(input++);\n} while (input < 10);\n\t\t\t\t\t\t\t</code></pre> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Arrays and Loops</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">While Loop</h2> <p class=\"slide__text\">It is possible to iterate over an array with a while loop:</p> <div class=\"slide__container\"> <pre class=\"slide__pre width-100-p height-100-p margin-top-2\"><code class=\"hljs slide__code slide__code--middle javascript small\" data-trim=\"\">\nconst a = [1, 2, 3, 4, 5]\nconst len = a.length;\nlet i = 0;\n\nwhile(i < len) {\n  console.log(i);\n  i++;\n}\n// 0\n// 1\n// 2\n// 3\n// 4\n\t\t\t\t\t\t\t</code></pre> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Arrays and Loops</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">For Loop</h2> <p class=\"slide__text\">You can also iterate over an array with:</p> <div class=\"slide__container\"> <pre class=\"slide__pre width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript small\" data-trim=\"\">\nlet teams = ['Liverpool', 'Arsenal', 'Chelsea'];\n\nfor (let i = 0; i < teams.length; i++) {\n\tconsole.log(teams[i]);\n}\n// Liverpool\n// Arsenal\n// Chelsea\n\t\t\t\t\t\t\t</code></pre> <div class=\"slide__container\"> <img class=\"slide__image slide__image--for-loop width-45 fragment\" src=\"https://wilsonespina.github.io/GA-JSD/1959c429badbf06225570e4e77bfea84.png\" alt=\"For statement\"> </div> </div> </div> </section> <section class=\"slide\"> <header class=\"slide__header\"> <h2 class=\"slide__header--title\">Arrays and Loops</h2> </header> <div class=\"slide__content\"> <h2 class=\"slide__title\">forEach Loop</h2> <p class=\"slide__text\">Another way of iterating over an array that was added with ECMAScript 5 is <code>forEach()</code>:</p> <div class=\"slide__container\"> <pre class=\"slide__pre width-100-p height-100-p\"><code class=\"hljs slide__code slide__code--middle javascript small\" data-trim=\"\">\nlet teams = ['Tottenham', 'QPR', 'Watford'];\n\nteams.forEach(function(element)) {\n\tconsole.log(element);\n}\n\t\t\t\t\t\t\t</code></pre> <div class=\"slide__container\"> <img class=\"slide__image slide__image--for-each-loop margin-top-1 width-45 fragment\" src=\"https://wilsonespina.github.io/GA-JSD/beaaeadcfc1956e4acee02c3555a4584.png\" alt=\"For each statement\"> </div> </div> </div> </section> </div> </div> <script src=\"https://cdnjs.cloudflare.com/ajax/libs/reveal.js/3.6.0/js/reveal.min.js\"></script> <script src=\"https://cdnjs.cloudflare.com/ajax/libs/reveal.js/3.6.0/lib/js/head.min.js\"></script> <script>var i=\"https://cdnjs.cloudflare.com/ajax/libs/reveal.js/3.6.0/\";Reveal.initialize({slideNumber:!0,controls:!0,history:!0,transition:\"fade\",center:!1,progress:!1,dependencies:[{src:\"\".concat(i,\"plugin/highlight/highlight.min.js\"),async:!0,callback:function(){hljs.initHighlightingOnLoad()}}]});</script> </body></html>"},"sourceMaps":null,"error":null,"hash":"ea0d18086787332774d05bf94af79b30","cacheData":{"env":{}}}